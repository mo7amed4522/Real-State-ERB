{
	"info": {
		"_postman_id": "a9e6b528-2a78-4a94-8a4a-0a758e5a7b69",
		"name": "My Property Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GraphQL",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Register($registerInput: RegisterInput!) {\n  register(registerInput: $registerInput) {\n    id\n    email\n    firstName\n    lastName\n  }\n}",
								"variables": "{\n  \"registerInput\": {\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (Local)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Login($loginInput: LoginInput!) {\n  login(loginInput: $loginInput) {\n    id\n    email\n    firstName\n    lastName\n  }\n}",
								"variables": "{\n  \"loginInput\": {\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me (Protected)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Me {\n  me {\n    id\n    email\n    firstName\n    lastName\n    photoUrl\n    phoneNumber\n    gender\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateUser($updateUserInput: UpdateUserInput!) {\n  updateUser(updateUserInput: $updateUserInput) {\n    id\n    firstName\n    lastName\n    phoneNumber\n    gender\n  }\n}",
								"variables": "{\n  \"updateUserInput\": {\n    \"firstName\": \"UpdatedFirst\",\n    \"lastName\": \"UpdatedLast\",\n    \"phoneNumber\": \"1234567890\",\n    \"gender\": \"other\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteUser {\n  deleteUser\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ForgotPassword($forgotPasswordInput: ForgotPasswordInput!) {\n  forgotPassword(forgotPasswordInput: $forgotPasswordInput)\n}",
								"variables": "{\n  \"forgotPasswordInput\": {\n    \"email\": \"test@example.com\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ResetPassword($resetPasswordInput: ResetPasswordInput!) {\n  resetPassword(resetPasswordInput: $resetPasswordInput) {\n    id\n    email\n  }\n}",
								"variables": "{\n  \"resetPasswordInput\": {\n    \"token\": \"PASTE_TOKEN_FROM_FORGOT_PASSWORD_RESPONSE_HERE\",\n    \"password\": \"newSecurePassword123\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Wallet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateWallet($input: CreateWalletInput!) {\n  createWallet(input: $input) {\n    id\n    userId\n    balance\n    frozenBalance\n    isActive\n    createdAt\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"paymentMethod\": \"stripe\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Wallet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetUserWallet {\n  getUserWallet {\n    id\n    userId\n    balance\n    frozenBalance\n    isActive\n    createdAt\n    transactions {\n      id\n      amount\n      transactionType\n      status\n      createdAt\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wallet Balance",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetWalletBalance($walletId: String!) {\n  getWalletBalance(walletId: $walletId) {\n    balance\n    frozenBalance\n  }\n}",
								"variables": "{\n  \"walletId\": \"WALLET_ID_HERE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Funds",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Deposit($walletId: String!, $input: DepositInput!) {\n  deposit(walletId: $walletId, input: $input) {\n    id\n    amount\n    status\n    stripePaymentIntentId\n    metadata\n    createdAt\n  }\n}",
								"variables": "{\n  \"walletId\": \"WALLET_ID_HERE\",\n  \"input\": {\n    \"amount\": 100.00,\n    \"paymentMethod\": \"stripe\",\n    \"description\": \"Initial deposit\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm Deposit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ConfirmDeposit($transactionId: String!, $paymentIntentId: String!) {\n  confirmDeposit(transactionId: $transactionId, paymentIntentId: $paymentIntentId) {\n    id\n    amount\n    status\n    createdAt\n  }\n}",
								"variables": "{\n  \"transactionId\": \"TRANSACTION_ID_HERE\",\n  \"paymentIntentId\": \"PAYMENT_INTENT_ID_HERE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Funds",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Withdraw($walletId: String!, $input: WithdrawInput!) {\n  withdraw(walletId: $walletId, input: $input) {\n    id\n    amount\n    status\n    stripeTransferId\n    createdAt\n  }\n}",
								"variables": "{\n  \"walletId\": \"WALLET_ID_HERE\",\n  \"input\": {\n    \"amount\": 50.00,\n    \"paymentMethod\": \"stripe\",\n    \"description\": \"Withdrawal to bank account\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transfer Between Wallets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Transfer($fromWalletId: String!, $input: TransferInput!) {\n  transfer(fromWalletId: $fromWalletId, input: $input) {\n    id\n    amount\n    status\n    metadata\n    createdAt\n  }\n}",
								"variables": "{\n  \"fromWalletId\": \"SENDER_WALLET_ID_HERE\",\n  \"input\": {\n    \"amount\": 25.00,\n    \"receiverWalletId\": \"RECEIVER_WALLET_ID_HERE\",\n    \"description\": \"Transfer to friend\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetTransactionHistory($walletId: String!, $limit: Int, $offset: Int) {\n  getTransactionHistory(walletId: $walletId, limit: $limit, offset: $offset) {\n    id\n    amount\n    transactionType\n    status\n    description\n    createdAt\n  }\n}",
								"variables": "{\n  \"walletId\": \"WALLET_ID_HERE\",\n  \"limit\": 20,\n  \"offset\": 0\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction Details",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetTransaction($transactionId: String!) {\n  getTransaction(transactionId: $transactionId) {\n    id\n    amount\n    transactionType\n    status\n    description\n    stripePaymentIntentId\n    stripeTransferId\n    metadata\n    createdAt\n  }\n}",
								"variables": "{\n  \"transactionId\": \"TRANSACTION_ID_HERE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CancelTransaction($transactionId: String!) {\n  cancelTransaction(transactionId: $transactionId) {\n    id\n    status\n    createdAt\n  }\n}",
								"variables": "{\n  \"transactionId\": \"TRANSACTION_ID_HERE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Bank Details",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateBankDetails($walletId: String!, $encryptedBankDetails: String!) {\n  updateBankDetails(walletId: $walletId, encryptedBankDetails: $encryptedBankDetails) {\n    id\n    userId\n    isActive\n    updatedAt\n  }\n}",
								"variables": "{\n  \"walletId\": \"WALLET_ID_HERE\",\n  \"encryptedBankDetails\": \"ENCRYPTED_BANK_DETAILS_HERE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/users/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wallet Webhooks",
			"item": [
				{
					"name": "Stripe Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Stripe-Signature",
								"value": "whsec_your_webhook_secret_here"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"evt_test_webhook\",\n  \"object\": \"event\",\n  \"api_version\": \"2022-11-15\",\n  \"created\": 1640995200,\n  \"data\": {\n    \"object\": {\n      \"id\": \"pi_test_payment_intent\",\n      \"object\": \"payment_intent\",\n      \"amount\": 10000,\n      \"currency\": \"usd\",\n      \"status\": \"succeeded\",\n      \"metadata\": {\n        \"userId\": \"user_id_here\",\n        \"walletId\": \"wallet_id_here\",\n        \"transactionType\": \"deposit\"\n      }\n    }\n  },\n  \"livemode\": false,\n  \"pending_webhooks\": 1,\n  \"request\": {\n    \"id\": \"req_test_request\",\n    \"idempotency_key\": null\n  },\n  \"type\": \"payment_intent.succeeded\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/wallet/webhook",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"wallet",
								"webhook"
							]
						}
					},
					"response": []
				}
			],
			"description": "Webhook endpoints for wallet payment processing"
		},
		{
			"name": "Auth (REST)",
			"item": [
				{
					"name": "Login with Google",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/auth/google",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"google"
							]
						}
					},
					"response": []
				}
			],
			"description": "Standard REST endpoints for authentication"
		},
		{
			"name": "Go Service (Buildings)",
			"item": [
				{
					"name": "Get Buildings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query { buildings { id title city price } }"
							}
						},
						"url": {
							"raw": "http://localhost/api/properties/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"properties",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Building",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateBuilding($title: String!, $description: String, $latitude: Float!, $longitude: Float!, $address: String!, $city: String!, $region: String!, $price: Float!, $company_id: Int!, $developer_id: Int!) {\n  createBuilding(title: $title, description: $description, latitude: $latitude, longitude: $longitude, address: $address, city: $city, region: $region, price: $price, company_id: $company_id, developer_id: $developer_id) {\n    id\n    title\n  }\n}",
								"variables": "{\n  \"title\": \"GoLang Tower\",\n  \"description\": \"A new tower built with Go!\",\n  \"latitude\": 25.1972,\n  \"longitude\": 55.2744,\n  \"address\": \"1 Sheikh Mohammed bin Rashid Blvd\",\n  \"city\": \"Dubai\",\n  \"region\": \"Downtown Dubai\",\n  \"price\": 1200000,\n  \"company_id\": 1,\n  \"developer_id\": 1\n}"
							}
						},
						"url": {
							"raw": "http://localhost/api/properties/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"properties",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listen for New Buildings (WebSocket)",
					"request": {
						"method": "WEBSOCKET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "subscription { buildingAdded { id title city price } }"
							}
						},
						"url": {
							"raw": "ws://localhost:8080/graphql",
							"protocol": "ws",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"description": "Go service endpoints for property management"
		},
		{
			"name": "Create Developer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation CreateDeveloper($createDeveloperInput: CreateDeveloperInput!) {\n  createDeveloper(createDeveloperInput: $createDeveloperInput) {\n    id\n    full_name\n    email\n    status\n  }\n}",
						"variables": "{\n  \"createDeveloperInput\": {\n    \"full_name\": \"John Doe Developer\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+971501234567\",\n    \"license_number\": \"D-987654\",\n    \"experience_years\": 5,\n    \"specialization\": \"Off-plan Properties\"\n  }\n}"
					}
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] }
			},
			"response": []
		},
		{
			"name": "Get Developer by ID",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query GetDeveloper($id: ID!) {\n  developer(id: $id) {\n    id\n    full_name\n    email\n    phone\n    experience_years\n    specialization\n    status\n  }\n}",
						"variables": "{\n  \"id\": \"YOUR_DEVELOPER_ID\"\n}"
					}
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] }
			},
			"response": []
		},
		{
			"name": "Get All Developers",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  developers {\n    id\n    full_name\n    status\n  }\n}"
					}
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] }
			},
			"response": []
		},
		{
			"name": "Update Developer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation UpdateDeveloper($updateDeveloperInput: UpdateDeveloperInput!) {\n  updateDeveloper(updateDeveloperInput: $updateDeveloperInput) {\n    id\n    full_name\n    status\n  }\n}",
						"variables": "{\n  \"updateDeveloperInput\": {\n    \"id\": \"YOUR_DEVELOPER_ID\",\n    \"status\": \"Verified\"\n  }\n}"
					}
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] }
			},
			"response": []
		},
		{
			"name": "Add Company Document",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "operations",
							"value": "{\"query\":\"mutation AddCompanyDocument($companyId: ID!, $file: Upload!, $documentType: DocumentType!) { addCompanyDocument(companyId: $companyId, file: $file, documentType: $documentType) { id file_url verified } }\",\"variables\":{\"companyId\":\"YOUR_COMPANY_ID\",\"file\":null,\"documentType\":\"VAT\"}}",
							"type": "text"
						},
						{
							"key": "map",
							"value": "{\"docFile\":[\"variables.file\"]}",
							"type": "text"
						},
						{
							"key": "docFile",
							"type": "file",
							"src": "/path/to/your/new_document.pdf"
						}
					]
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] },
				"description": "Upload a new document for an existing company."
			},
			"response": []
		},
		{
			"name": "Remove Company Document",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation RemoveCompanyDocument($id: ID!) {\n  removeCompanyDocument(id: $id)\n}",
						"variables": "{\n  \"id\": \"YOUR_DOCUMENT_ID_TO_DELETE\"\n}"
					}
				},
				"url": { "raw": "http://localhost/api/graphql", "protocol": "http", "host": ["localhost"], "path": ["api", "graphql"] }
			},
			"response": []
		},
		{
			"name": "Financial System",
			"item": [
				{
					"name": "Create Sale Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateSaleTransaction($input: CreateSaleTransactionInput!) {\n  createSaleTransaction(input: $input) {\n    id\n    buildingId\n    buyerId\n    sellerId\n    agentId\n    price\n    paymentMethod\n    status\n    commission\n    taxAmount\n    fees\n    totalAmount\n    notes\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"buildingId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"buyerId\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"sellerId\": \"123e4567-e89b-12d3-a456-426614174002\",\n    \"agentId\": \"123e4567-e89b-12d3-a456-426614174003\",\n    \"price\": 500000.00,\n    \"paymentMethod\": \"BANK_TRANSFER\",\n    \"commission\": 15000.00,\n    \"taxAmount\": 25000.00,\n    \"fees\": 5000.00,\n    \"notes\": \"Property sale transaction\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Sale Transaction Status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateSaleTransactionStatus($id: ID!, $status: String!) {\n  updateSaleTransactionStatus(id: $id, status: $status) {\n    id\n    status\n    updatedAt\n    completedAt\n  }\n}",
								"variables": "{\n  \"id\": \"PASTE_TRANSACTION_ID_HERE\",\n  \"status\": \"COMPLETED\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sale Transactions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetSaleTransactions(\n  $buildingId: ID\n  $buyerId: ID\n  $sellerId: ID\n  $agentId: ID\n  $status: String\n  $startDate: String\n  $endDate: String\n) {\n  getSaleTransactions(\n    buildingId: $buildingId\n    buyerId: $buyerId\n    sellerId: $sellerId\n    agentId: $agentId\n    status: $status\n    startDate: $startDate\n    endDate: $endDate\n  ) {\n    id\n    buildingId\n    buyerId\n    sellerId\n    agentId\n    price\n    paymentMethod\n    status\n    commission\n    taxAmount\n    fees\n    totalAmount\n    notes\n    createdAt\n    updatedAt\n    completedAt\n  }\n}",
								"variables": "{\n  \"status\": \"COMPLETED\",\n  \"startDate\": \"2024-01-01T00:00:00Z\",\n  \"endDate\": \"2024-12-31T23:59:59Z\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Lease Contract",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateLeaseContract($input: CreateLeaseContractInput!) {\n  createLeaseContract(input: $input) {\n    id\n    propertyId\n    tenantId\n    landlordId\n    agentId\n    durationMonths\n    startDate\n    endDate\n    monthlyRent\n    depositAmount\n    paymentFrequency\n    status\n    utilitiesIncluded\n    petAllowed\n    furnished\n    lateFeeAmount\n    gracePeriodDays\n    notes\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"propertyId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"tenantId\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"landlordId\": \"123e4567-e89b-12d3-a456-426614174002\",\n    \"agentId\": \"123e4567-e89b-12d3-a456-426614174003\",\n    \"durationMonths\": 12,\n    \"startDate\": \"2024-01-01T00:00:00Z\",\n    \"monthlyRent\": 2500.00,\n    \"depositAmount\": 5000.00,\n    \"paymentFrequency\": \"MONTHLY\",\n    \"utilitiesIncluded\": true,\n    \"petAllowed\": false,\n    \"furnished\": true,\n    \"lateFeeAmount\": 100.00,\n    \"gracePeriodDays\": 5,\n    \"notes\": \"Standard lease agreement\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Lease Status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateLeaseStatus($id: ID!, $status: String!) {\n  updateLeaseStatus(id: $id, status: $status) {\n    id\n    status\n    updatedAt\n    signedAt\n    terminatedAt\n  }\n}",
								"variables": "{\n  \"id\": \"PASTE_LEASE_ID_HERE\",\n  \"status\": \"ACTIVE\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lease Contracts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetLeaseContracts(\n  $propertyId: ID\n  $tenantId: ID\n  $landlordId: ID\n  $status: String\n  $activeOnly: Boolean\n) {\n  getLeaseContracts(\n    propertyId: $propertyId\n    tenantId: $tenantId\n    landlordId: $landlordId\n    status: $status\n    activeOnly: $activeOnly\n  ) {\n    id\n    propertyId\n    tenantId\n    landlordId\n    agentId\n    durationMonths\n    startDate\n    endDate\n    monthlyRent\n    depositAmount\n    paymentFrequency\n    status\n    utilitiesIncluded\n    petAllowed\n    furnished\n    lateFeeAmount\n    gracePeriodDays\n    notes\n    createdAt\n    updatedAt\n    signedAt\n    terminatedAt\n  }\n}",
								"variables": "{\n  \"status\": \"ACTIVE\",\n  \"activeOnly\": true\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Lease Payment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateLeasePayment($input: CreateLeasePaymentInput!) {\n  createLeasePayment(input: $input) {\n    id\n    leaseId\n    amount\n    paymentDate\n    dueDate\n    status\n    paymentMethod\n    lateFee\n    notes\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"leaseId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"amount\": 2500.00,\n    \"paymentDate\": \"2024-01-01T00:00:00Z\",\n    \"dueDate\": \"2024-01-01T00:00:00Z\",\n    \"paymentMethod\": \"BANK_TRANSFER\",\n    \"notes\": \"January rent payment\"\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment Status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdatePaymentStatus($id: ID!, $status: String!) {\n  updatePaymentStatus(id: $id, status: $status) {\n    id\n    status\n    updatedAt\n  }\n}",
								"variables": "{\n  \"id\": \"PASTE_PAYMENT_ID_HERE\",\n  \"status\": \"COMPLETED\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Offer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateOffer($input: CreateOfferInput!) {\n  createOffer(input: $input) {\n    id\n    title\n    description\n    discountPercent\n    discountAmount\n    startDate\n    endDate\n    buildingId\n    companyId\n    imageUrl\n    termsConditions\n    isActive\n    maxUses\n    currentUses\n    minAmount\n    maxAmount\n    code\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"input\": {\n    \"title\": \"Summer Sale Discount\",\n    \"description\": \"Get 10% off on all properties this summer\",\n    \"discountPercent\": 10,\n    \"startDate\": \"2024-06-01T00:00:00Z\",\n    \"endDate\": \"2024-08-31T23:59:59Z\",\n    \"companyId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"imageUrl\": \"https://example.com/summer-sale.jpg\",\n    \"termsConditions\": \"Valid for new contracts only\",\n    \"maxUses\": 100,\n    \"minAmount\": 1000.00,\n    \"maxAmount\": 100000.00\n  }\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Use Offer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UseOffer($code: String!, $userId: ID!, $amount: Float!) {\n  useOffer(code: $code, userId: $userId, amount: $amount) {\n    id\n    offerId\n    userId\n    amount\n    discount\n    usedAt\n  }\n}",
								"variables": "{\n  \"code\": \"SUMMER2024\",\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174001\",\n  \"amount\": 5000.00\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Offers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query GetOffers(\n  $buildingId: ID\n  $companyId: ID\n  $activeOnly: Boolean\n) {\n  getOffers(\n    buildingId: $buildingId\n    companyId: $companyId\n    activeOnly: $activeOnly\n  ) {\n    id\n    title\n    description\n    discountPercent\n    discountAmount\n    startDate\n    endDate\n    buildingId\n    companyId\n    imageUrl\n    termsConditions\n    isActive\n    maxUses\n    currentUses\n    minAmount\n    maxAmount\n    code\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"activeOnly\": true\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Financial Report",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation GenerateFinancialReport(\n  $reportType: String!\n  $periodStart: String!\n  $periodEnd: String!\n  $generatedBy: ID!\n) {\n  generateFinancialReport(\n    reportType: $reportType\n    periodStart: $periodStart\n    periodEnd: $periodEnd\n    generatedBy: $generatedBy\n  ) {\n    id\n    reportType\n    periodStart\n    periodEnd\n    totalSales\n    totalRentals\n    totalRevenue\n    totalCommissions\n    totalTaxes\n    totalFees\n    reportData\n    generatedAt\n    generatedBy\n  }\n}",
								"variables": "{\n  \"reportType\": \"REVENUE\",\n  \"periodStart\": \"2024-01-01T00:00:00Z\",\n  \"periodEnd\": \"2024-12-31T23:59:59Z\",\n  \"generatedBy\": \"123e4567-e89b-12d3-a456-426614174000\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"protocolProfileBehavior": {},
	"auth": {
		"_postman_id": "a9e6b528-2a78-4a94-8a4a-0a758e5a7b69",
		"name": "My Property Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	}
} 